{"version":3,"sources":["../../../example/server/server.js"],"names":["fs","require","express","c","app","getVersion","updateManifest","HOST","cache","Set","watch","encoding","eventType","filename","re","has","test","add","version","use","req","res","next","console","log","cyan","method","url","static","listen","yellow","green"],"mappings":"AAAA,MAAMA,KAAKC,QAAS,IAAT,CAAX;AAAA,MACMC,UAAUD,QAAS,SAAT,CADhB;AAAA,MAEME,IAAIF,QAAS,OAAT,CAFV;AAAA,MAGMG,MAAMF,SAHZ;AAAA,MAIM,EAAEG,UAAF,EAAcC,cAAd,KAAiCL,QAAS,aAAT,CAJvC;AAAA,MAKMM,OAAO,iCALb;AAAA,MAMMC,QAAQ,IAAIC,GAAJ,EANd;;AAQA;;;AAGAT,GAAGU,KAAH,CAAU,UAAV,EAAsB,EAAEC,UAAU,MAAZ,EAAtB,EAA4C,CAAEC,SAAF,EAAaC,QAAb,KAA2B;AACrE,QAAMC,KAAK,SAAX;AACA,MAAK,CAACD,QAAD,IAAaL,MAAMO,GAAN,CAAWF,QAAX,CAAb,IAAsC,CAACC,GAAGE,IAAH,CAASH,QAAT,CAA5C,EAAkE;AAChE;AACD;AACDL,QAAMS,GAAN,CAAWJ,QAAX;AACA,QAAMK,UAAUb,WAAYQ,QAAZ,CAAhB;AACA,MAAK,CAACK,OAAN,EAAe;AACb;AACD;AACDZ,iBAAgBC,IAAhB,EAAsBW,OAAtB;AACD,CAXD;;AAcAd,IAAIe,GAAJ,CAAQ,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCC,UAAQC,GAAR,CAAarB,EAAEsB,IAAF,CAAS,GAAEL,IAAIM,MAAO,IAAGN,IAAIO,GAAI,EAAjC,CAAb;AACAL;AACD,CAHD;;AAKAlB,IAAIe,GAAJ,CAASjB,QAAQ0B,MAAR,CAAgB,UAAhB,CAAT;AACAxB,IAAIe,GAAJ,CAASjB,QAAQ0B,MAAR,CAAgB,GAAhB,CAAT;;AAEAxB,IAAIyB,MAAJ,CAAY,IAAZ,EAAkB,MAAM;AACtBN,UAAQC,GAAR,CAAc,GAAErB,EAAE2B,MAAF,CAAS,2CAAT,CAAsD,IAAG3B,EAAE4B,KAAF,CAAQ,uBAAR,CAAiC,EAA1G;AACD,CAFD","file":"server.js","sourcesContent":["const fs = require( \"fs\" ),\r\n      express = require( \"express\" ),\r\n      c = require( \"chalk\" ),\r\n      app = express(),\r\n      { getVersion, updateManifest } = require( \"./Lib/utils\" ),\r\n      HOST = \"http://localhost:8080/releases/\",\r\n      cache = new Set();\r\n\r\n/**\r\n * Watches releases folder. As a new release arrives, server updates the manifest\r\n */\r\nfs.watch( \"releases\", { encoding: \"utf8\" }, ( eventType, filename ) => {\r\n  const re = /\\.zip$/i;\r\n  if ( !filename || cache.has( filename ) || !re.test( filename ) ) {\r\n    return;\r\n  }\r\n  cache.add( filename );\r\n  const version = getVersion( filename );\r\n  if ( !version ){\r\n    return;\r\n  }\r\n  updateManifest( HOST, version );\r\n});\r\n\r\n\r\napp.use(function (req, res, next) {\r\n  console.log( c.cyan( `${req.method} ${req.url}` ) );\r\n  next();\r\n});\r\n\r\napp.use( express.static( \"releases\" ) );\r\napp.use( express.static( \".\" ) );\r\n\r\napp.listen( 8080, () => {\r\n  console.log( `${c.yellow(\"Starting up release-server. Available on:\")} ${c.green(\"http://127.0.0.1:8080\")}` );\r\n});"]}