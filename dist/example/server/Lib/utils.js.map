{"version":3,"sources":["../../../../example/server/Lib/utils.js"],"names":["fs","require","join","c","HOST","MANIFEST_FILE","__dirname","RELEASES","manifest","platforms","getVersion","filename","re","match","getPlatform","file","find","pair","indexOf","updateManifest","host","version","readdir","err","files","console","error","packages","forEach","platform","url","size","statSync","writeFile","JSON","stringify","log","cyan","exports"],"mappings":"AAAA,MAAMA,KAAKC,QAAS,IAAT,CAAX;AAAA,MACM,EAAEC,IAAF,KAAWD,QAAS,MAAT,CADjB;AAAA,MAEME,IAAIF,QAAS,OAAT,CAFV;AAAA,MAGMG,OAAO,iCAHb;AAAA,MAIMC,gBAAgBH,KAAMI,SAAN,EAAiB,MAAjB,EAAyB,eAAzB,CAJtB;AAAA,MAKMC,WAAWL,KAAMI,SAAN,EAAiB,MAAjB,EAAyB,WAAzB,CALjB;AAAA,MAMME,WAAWP,QAASI,aAAT,CANjB;AAAA,MAOMI,YAAY,CACV,CAAG,YAAH,EAAiB,SAAjB,CADU,EAEV,CAAG,YAAH,EAAiB,SAAjB,CAFU,EAGV,CAAG,UAAH,EAAe,OAAf,CAHU,EAIV,CAAG,UAAH,EAAe,OAAf,CAJU,EAKV,CAAG,WAAH,EAAgB,OAAhB,CALU,EAMV,CAAG,UAAH,EAAe,OAAf,CANU,CAPlB;;AAiBA;;;;;AAKA,SAASC,UAAT,CAAqBC,QAArB,EAA+B;AAC7B,QAAMC,KAAK,oBAAX;AACA,QAAMC,QAAQF,SAASE,KAAT,CAAgBD,EAAhB,CAAd;AACA,SAAOC,QAAQA,MAAO,CAAP,CAAR,GAAqB,IAA5B;AACD;AACD;;;;;AAKA,SAASC,WAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMF,QAAQJ,UAAUO,IAAV,CAAgBC,QAAQF,KAAKG,OAAL,CAAcD,KAAM,CAAN,CAAd,MAA8B,CAAC,CAAvD,CAAd;AACA,SAAOJ,QAAQA,MAAO,CAAP,CAAR,GAAqB,IAA5B;AACD;AACD;;;;;AAKA,SAASM,cAAT,CAAyBC,IAAzB,EAA+BC,UAAU,IAAzC,EAA+C;AAC7CrB,KAAGsB,OAAH,CAAYf,QAAZ,EAAsB,CAAEgB,GAAF,EAAOC,KAAP,KAAkB;AACtC,QAAKD,GAAL,EAAW;AACT,aAAOE,QAAQC,KAAR,CAAeH,GAAf,CAAP;AACD;AACDf,aAASmB,QAAT,GAAoB,EAApB;AACAH,UAAMI,OAAN,CAAeb,QAAQ;AACrB,YAAMc,WAAYf,YAAaC,IAAb,CAAlB;AACA,UAAK,CAACc,QAAN,EAAiB;AACf;AACD;AACDrB,eAASmB,QAAT,CAAmBE,QAAnB,IAAgC;AAC9BC,aAAKV,OAAOL,IADkB;AAE9BgB,cAAM/B,GAAGgC,QAAH,CAAa9B,KAAMK,QAAN,EAAgBQ,IAAhB,CAAb,EAAsCgB;AAFd,OAAhC;AAID,KATD;;AAWA,QAAKV,OAAL,EAAe;AACbb,eAASa,OAAT,GAAmBA,OAAnB;AACD;;AAEDrB,OAAGiC,SAAH,CAAc5B,aAAd,EAA6B6B,KAAKC,SAAL,CAAgB3B,QAAhB,EAA0B,IAA1B,EAAgC,CAAhC,CAA7B,EAAkE,MAAlE,EAA4Ee,GAAF,IAAW;AACnF,UAAKA,GAAL,EAAW;AACT,eAAOE,QAAQC,KAAR,CAAeH,GAAf,CAAP;AACD;AACDE,cAAQW,GAAR,CAAa,0BACPf,UAAW,eAAclB,EAAEkC,IAAF,CAAQhB,OAAR,CAAkB,EAA3C,GAA+C,EADxC,CAAb;AAED,KAND;AAQD,GA5BD;AA6BD;;AAEDiB,QAAQnB,cAAR,GAAyBA,cAAzB;AACAmB,QAAQ5B,UAAR,GAAqBA,UAArB","file":"utils.js","sourcesContent":["const fs = require( \"fs\" ),\r\n      { join } = require( \"path\" ),\r\n      c = require( \"chalk\" ),\r\n      HOST = \"http://localhost:8080/releases/\",\r\n      MANIFEST_FILE = join( __dirname, \"/../\", \"/package.json\" ),\r\n      RELEASES = join( __dirname, \"/../\", \"/releases\" ),\r\n      manifest = require( MANIFEST_FILE ),\r\n      platforms = [\r\n        [ `linux-x64.`, `linux64` ],\r\n        [ `linux-x32.`, `linux32` ],\r\n        [ `osx-x64.`, `mac64` ],\r\n        [ `osx-x32.`, `mac32` ],\r\n        [ `win-ia32.`, `win32` ],\r\n        [ `win-x64.`, `win64` ]\r\n      ];\r\n\r\n\r\n/**\r\n * Parse vemver from filename\r\n * @param {string} filename\r\n * @returns {string}\r\n */\r\nfunction getVersion( filename ){\r\n  const re = /-r(\\d+\\.\\d+\\.\\d+)-/;\r\n  const match = filename.match( re );\r\n  return match ? match[ 1 ] : null;\r\n}\r\n/**\r\n * Determine platfrom from filename\r\n * @param {string} file\r\n * @returns {string}\r\n */\r\nfunction getPlatform( file ){\r\n  const match = platforms.find( pair => file.indexOf( pair[ 0 ] ) !== -1 );\r\n  return match ? match[ 1 ] : null;\r\n}\r\n/**\r\n * Update manifest fields packages and version\r\n * @param {string} host\r\n * @param {string} [version]\r\n */\r\nfunction updateManifest( host, version = null ){\r\n  fs.readdir( RELEASES, ( err, files ) => {\r\n    if ( err ) {\r\n      return console.error( err );\r\n    }\r\n    manifest.packages = {};\r\n    files.forEach( file => {\r\n      const platform =  getPlatform( file );\r\n      if ( !platform ) {\r\n        return;\r\n      }\r\n      manifest.packages[ platform ] = {\r\n        url: host + file,\r\n        size: fs.statSync( join( RELEASES, file ) ).size\r\n      };\r\n    });\r\n\r\n    if ( version ) {\r\n      manifest.version = version;\r\n    }\r\n\r\n    fs.writeFile( MANIFEST_FILE, JSON.stringify( manifest, null, 2 ), \"utf8\", ( err ) =>Â {\r\n      if ( err ) {\r\n        return console.error( err );\r\n      }\r\n      console.log( \"package.json updated\"\r\n        + ( version ? ` to version ${c.cyan( version )}` : \"\" ) );\r\n    });\r\n\r\n  });\r\n}\r\n\r\nexports.updateManifest = updateManifest;\r\nexports.getVersion = getVersion;"]}