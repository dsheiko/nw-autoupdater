{"version":3,"sources":["../../../Lib/Swap/Abstract.js"],"names":["join","require","fs","SwapAbstract","constructor","options","getScriptContent","swapScript","extractScript","homeDir","content","getSwapScriptContent","scriptPath","writeFileSync","getArgs","execDir","updateDir","executable","backupDir","logDir","verbose","getRunner","module","exports"],"mappings":"AAAA,MAAM,EAAEA,IAAF,KAAYC,QAAS,MAAT,CAAlB;AAAA,MACMC,KAAKD,QAAS,IAAT,CADX;;AAGA,MAAME,YAAN,CAAmB;;AAEjBC,cAAaC,OAAb,EAAsB;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDC,qBAAkB;AAChB,UAAM,EAAEC,UAAF,KAAiB,KAAKF,OAA5B;AACA,WAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,IA6BLE,cACL;;;;;CA9BU,CAAP;AAoCD;;AAEDC,gBAAeC,OAAf,EACA;AACE,UAAMC,UAAU,KAAKC,oBAAL,EAAhB;AAAA,UACMC,aAAaZ,KAAMS,OAAN,EAAe,SAAf,CADnB;AAEAP,OAAGW,aAAH,CAAkBD,UAAlB,EAA8BF,OAA9B,EAAuC,MAAvC;AACA,SAAKE,UAAL,GAAkBA,UAAlB;AACD;;AAED;;;;AAIAE,YACA;AACI,UAAM,EAAEC,OAAF,EAAWC,SAAX,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,MAA7C,EAAqDC,OAArD,KAAkE,KAAKf,OAA7E;AACA,WAAO,CAAG,cAAaU,OAAQ,EAAxB,EAA4B,iBAAgBC,SAAU,EAAtD,EAA0D,YAAWC,UAAW,EAAhF,EACA,cAAaC,SAAU,EADvB,EAC2B,aAAYE,UAAW,GAAX,GAAiB,EAAE,EAD1D,CAAP;AAEH;;AAEDC,cAAW;AACT,WAAO,KAAKT,UAAZ;AACD;;AAnEgB;;AAuEnBU,OAAOC,OAAP,GAAiBpB,YAAjB","file":"Abstract.js","sourcesContent":["const { join  } = require( \"path\" ),\r\n      fs = require( \"fs\" );\r\n\r\nclass SwapAbstract {\r\n\r\n  constructor( options ){\r\n    this.options = options;\r\n  }\r\n\r\n  getScriptContent(){\r\n    const { swapScript } = this.options;\r\n    return `#!/bin/bash\r\nfor i in \"$@\"\r\ndo\r\ncase $i in\r\n  --app-path=*)\r\n    APP_PATH=\"\\${i#*=}\"\r\n    shift\r\n    ;;\r\n  --bak-path=*)\r\n    BAK_PATH=\"\\${i#*=}\"\r\n    shift\r\n    ;;\r\n  --update-path=*)\r\n    UPDATE_PATH=\"\\${i#*=}\"\r\n    shift\r\n    ;;\r\n  --runner=*)\r\n    RUNNER=\"\\${i#*=}\"\r\n    shift\r\n    ;;\r\n  --verbose=*)\r\n    VERBOSE=\"\\${i#*=}\"\r\n    shift\r\n    ;;\r\n    *)\r\n            # unknown option\r\n    ;;\r\nesac\r\ndone\r\n` + ( swapScript ||\r\n`echo \"rsync -al\\${VERBOSE} --delete \\${APP_PATH}/. \\${BAK_PATH}/\"\r\nrsync -al\\${VERBOSE} --delete \"\\${APP_PATH}/.\" \"\\${BAK_PATH}/\"\r\necho \" \"\r\necho \"rsync -al\\${VERBOSE} --delete \\${UPDATE_PATH}/. \\${APP_PATH}/\"\r\nrsync -al\\${VERBOSE} --delete \"\\${UPDATE_PATH}/.\" \"\\${APP_PATH}/\"\r\n` );\r\n  }\r\n\r\n  extractScript( homeDir )\r\n  {\r\n    const content = this.getSwapScriptContent(),\r\n          scriptPath = join( homeDir, \"swap.sh\" );\r\n    fs.writeFileSync( scriptPath, content, \"utf8\" );\r\n    this.scriptPath = scriptPath;\r\n  }\r\n\r\n  /**\r\n   * Get args for swap script\r\n   * @returns {Array}\r\n   */\r\n  getArgs()\r\n  {\r\n      const { execDir, updateDir, executable, backupDir, logDir, verbose  } = this.options;\r\n      return [ `--app-path=${execDir}`, `--update-path=${updateDir}`, `--runner=${executable}`,\r\n            `--bak-path=${backupDir}`, `--verbose=${verbose ? `v` : ``}`  ];\r\n  }\r\n\r\n  getRunner(){\r\n    return this.scriptPath;\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = SwapAbstract;\r\n"]}