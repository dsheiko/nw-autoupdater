{"version":3,"sources":["../../Lib/unpackTarGz.js"],"names":["archiveFile","extractDest","onProgress","options","plugins","decompressTargz","decompress","decompressTarGz","require","module","exports"],"mappings":";;AAGA;;;;;;;+BAMA,WAAgCA,WAAhC,EAA6CC,WAA7C,EAA0DC,UAA1D,EAAuE;AACrE,UAAMC,UAAU;AACdC,eAAS,CACLC,iBADK;AADK,KAAhB;AAKAH,eAAY,CAAZ,EAAe,CAAf;AACA,UAAMI,WAAYN,WAAZ,EAAyBC,WAAzB,EAAsCE,OAAtC,CAAN;AACD,G;;kBARcI,e;;;;;;;AATf,MAAMD,aAAaE,QAAS,YAAT,CAAnB;AAAA,MACMH,kBAAkBG,QAAS,kBAAT,CADxB;;AAmBAC,OAAOC,OAAP,GAAiBH,eAAjB","file":"unpackTarGz.js","sourcesContent":["const decompress = require( \"decompress\" ),\r\n      decompressTargz = require( \"decompress-targz\" );\r\n\r\n/**\r\n * Extract archive into a given directory\r\n * @param {string} archiveFile\r\n * @param {string} extractDest\r\n * @param {function} onProgress\r\n */\r\nasync function decompressTarGz( archiveFile, extractDest, onProgress ) {\r\n  const options = {\r\n    plugins: [\r\n        decompressTargz()\r\n    ]\r\n  };\r\n  onProgress( 1, 1 );\r\n  await decompress( archiveFile, extractDest, options );\r\n}\r\n\r\nmodule.exports = decompressTarGz;"]}