{"version":3,"sources":["../../../Lib/Strategy/AppSwap.js"],"names":["extraArgs","execDir","executable","updateDir","backupDir","logPath","options","tpmUserData","join","nw","App","dataPath","app","args","concat","IS_OSX","launch","quit","restartToSwap","log","fs","openSync","copy","swap","restart","require","swapFactory","getBakDirFromArgv","argv","raw","find","arg","startsWith","substr","isSwapRequest","exports"],"mappings":"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","file":"AppSwap.js","sourcesContent":["const { join  } = require( \"path\" ),\r\n      fs = require( \"fs-extra\" ),\r\n      { launch, copy } = require( \"../utils\" ),\r\n      { swapFactory, IS_OSX } = require( \"../env\" );\r\n\r\n\r\n  /**\r\n   * Restart and launch detached swap\r\n   * @returns {Promise}\r\n   */\r\n  async function restartToSwap(extraArgs = []){\r\n    const { execDir, executable, updateDir, backupDir, logPath } = this.options,\r\n          tpmUserData = join( nw.App.dataPath, \"swap\" ),\r\n          app = join( updateDir, executable ),\r\n          args = [ `--user-data-dir=${tpmUserData}`,\r\n            `--swap=${execDir}`, `--bak-dir=${backupDir}` ].concat( extraArgs );\r\n\r\n    if ( IS_OSX ) {\r\n      await launch( \"open\", [ \"-a\", app, \"--args\", ...args ], updateDir, logPath );\r\n    } else {\r\n      await launch( app, args, updateDir, logPath );\r\n    }\r\n    nw.App.quit();\r\n  }\r\n\r\n  function getBakDirFromArgv( argv ){\r\n    const raw = argv.find( arg => arg.startsWith( \"--bak-dir=\" ) );\r\n    if ( !raw ) {\r\n      return false;\r\n    }\r\n    return raw.substr( 10 );\r\n  }\r\n\r\n  /**\r\n   * Is it a swap request\r\n   * @returns {Boolean}\r\n   */\r\n  function isSwapRequest(){\r\n    const raw = this.argv.find( arg => arg.startsWith( \"--swap=\" ) );\r\n    if ( !raw ) {\r\n      return false;\r\n    }\r\n\r\n    this.options.execDir = raw.substr( 7 );\r\n    this.options.backupDir = getBakDirFromArgv( this.argv ) || this.options.backupDir;\r\n    return true;\r\n  }\r\n  /**\r\n   * Do swap\r\n   */\r\n  async function swap(){\r\n    const { executable, backupDir, execDir, updateDir, logPath } = this.options,\r\n          log = fs.openSync( logPath, \"a\" );\r\n    if ( IS_OSX ) {\r\n        await copy( join( execDir, executable ), backupDir, log );\r\n        await copy( updateDir, execDir, log );\r\n    } else {\r\n        await copy( execDir, backupDir, log );\r\n        await copy( updateDir, execDir, log );\r\n    }\r\n  }\r\n  /**\r\n   * REstart after swap\r\n   * @returns {Promise}\r\n   */\r\n  async function restart(extraArgs = []){\r\n    const { execDir, executable, updateDir, logPath } = this.options,\r\n          app = join( execDir, executable );\r\n\r\n     if ( IS_OSX ) {\r\n      await launch( \"open\", [ \"-a\", app, \"--args\" ].concat( extraArgs ), execDir, logPath );\r\n    } else {\r\n      await launch( app, [], execDir, logPath );\r\n    }\r\n    nw.App.quit();\r\n  }\r\n\r\n\r\nexports.restartToSwap = restartToSwap;\r\nexports.restart = restart;\r\nexports.swap = swap;\r\nexports.isSwapRequest = isSwapRequest;\r\n"]}