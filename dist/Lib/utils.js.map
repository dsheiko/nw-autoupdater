{"version":3,"sources":["../../Lib/utils.js"],"names":["dir","fs","removeSync","remove","from","to","log","Promise","resolve","reject","writeSync","copy","err","runnerPath","argv","cwd","logPath","openSync","child","spawn","timeout","detached","stdout","on","data","stderr","e","join","unref","setTimeout","launch","require","rtrim","replace","exports"],"mappings":";AAWA;;;;;+BAIA,WAAuBA,GAAvB,EAA4B;AAC1BC,OAAGC,UAAH,CAAeF,GAAf;AACD,G;;kBAFcG,M;;;;;AAIf;;;;;;;;;;gCAOA,WAAqBC,IAArB,EAA2BC,EAA3B,EAA+BC,GAA/B,EAAoC;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAAEC,OAAF,EAAWC,MAAX,EAAuB;AACxCR,SAAGS,SAAH,CAAcJ,GAAd,EAAoB,SAAQF,IAAK,MAAKC,EAAG,KAAzC,EAA+C,OAA/C;AACAJ,SAAGU,IAAH,CAASP,IAAT,EAAeC,EAAf,EAAmB,UAAEO,GAAF,EAAW;AAC5B,YAAKA,GAAL,EAAW;AACTX,aAAGS,SAAH,CAAcJ,GAAd,EAAoB,UAASM,GAAI,IAAjC,EAAsC,OAAtC;AACA,iBAAOH,OAAQG,GAAR,CAAP;AACD;AACDJ;AACD,OAND;AAOD,KATM,CAAP;AAUD,G;;kBAXcG,I;;;;;AAaf;;;;;;;;;;;gCAQA,WAAuBE,UAAvB,EAAmCC,IAAnC,EAAyCC,GAAzC,EAA8CC,OAA9C,EAAuD;AACpD,WAAO,IAAIT,OAAJ,CAAY,UAAEC,OAAF,EAAWC,MAAX,EAAuB;AACvC,YAAMH,MAAML,GAAGgB,QAAH,CAAaD,OAAb,EAAsB,GAAtB,CAAZ;AAAA,YAEAE,QAAQC,MAAON,UAAP,EAAmBC,IAAnB,EAAyB;AAC9BM,iBAAS,IADqB;AAE9BC,kBAAU,IAFoB;AAG9BN;AAH8B,OAAzB,CAFR;;AAQAG,YAAMI,MAAN,CAAaC,EAAb,CAAiB,MAAjB,EAAyB,UAAEC,IAAF,EAAY;AAClCvB,WAAGS,SAAH,CAAcJ,GAAd,EAAoB,GAAEkB,IAAK,EAA3B,EAA8B,OAA9B;AACF,OAFD;;AAIAN,YAAMO,MAAN,CAAaF,EAAb,CAAiB,MAAjB,EAAyB,UAAEC,IAAF,EAAY;AACnCvB,WAAGS,SAAH,CAAcJ,GAAd,EAAoB,UAASkB,IAAK,EAAlC,EAAqC,OAArC;AACD,OAFD;;AAIAN,YAAMK,EAAN,CAAU,OAAV,EAAmB,UAAEG,CAAF,EAAS;AAC1BzB,WAAGS,SAAH,CAAcJ,GAAd,EAAmB,CAAE,QAAF,EAAYoB,CAAZ,EAAe,MAAf,EAAwBC,IAAxB,CAA8B,GAA9B,CAAnB,EAAwD,OAAxD;AACAlB,eAAQiB,CAAR;AACD,OAHD;;AAKCR,YAAMU,KAAN;AACAC,iBAAYrB,OAAZ,EAAqB,GAArB;AACH,KAxBM,CAAP;AAyBF,G;;kBA1BcsB,M;;;;;;;AA/Cf,MAAM7B,KAAK8B,QAAS,UAAT,CAAX;AAAA,MACM,EAAEZ,KAAF,KAAYY,QAAS,eAAT,CADlB;AAEA;;;;;AAKA,SAASC,KAAT,CAAgBhC,GAAhB,EACA;AACE,SAAOA,IAAIiC,OAAJ,CAAa,KAAb,EAAoB,EAApB,CAAP;AACD;;AAiEDC,QAAQJ,MAAR,GAAiBA,MAAjB;AACAI,QAAQF,KAAR,GAAgBA,KAAhB;AACAE,QAAQvB,IAAR,GAAeA,IAAf;AACAuB,QAAQ/B,MAAR,GAAiBA,MAAjB","file":"utils.js","sourcesContent":["const fs = require( \"fs-extra\" ),\r\n      { spawn } = require( \"child_process\" );\r\n/**\r\n  * Remove trailing slash\r\n  * @param {string} dir\r\n  * @returns {string}\r\n  */\r\nfunction rtrim( dir )\r\n{\r\n  return dir.replace( /\\/$/, \"\" );\r\n}\r\n/**\r\n * Remove a directory with content\r\n * @param {string} dir\r\n */\r\nasync function remove( dir ){\r\n  fs.removeSync( dir );\r\n}\r\n\r\n/**\r\n * Copy dir\r\n * @param {string} from\r\n * @param {string} to\r\n * @param {FileDescriptor} log\r\n * @returns {Promise}\r\n */\r\nasync function copy( from, to, log ){\r\n  return new Promise(( resolve, reject ) => {\r\n    fs.writeSync( log, `copy \"${from}\" \"${to}\"\\n`, \"utf-8\" );\r\n    fs.copy( from, to, ( err ) => {\r\n      if ( err ) {\r\n        fs.writeSync( log, `ERROR: ${err}\\n`, \"utf-8\" );\r\n        return reject( err );\r\n      }\r\n      resolve();\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Launch detached process\r\n * @param {string} runnerPath\r\n * @param {string[]} argv\r\n * @param {string} cwd\r\n * @param {string} logPath\r\n * @returns {Promise}\r\n */\r\nasync function launch( runnerPath, argv, cwd, logPath ){\r\n   return new Promise(( resolve, reject ) => {\r\n      const log = fs.openSync( logPath, \"a\" ),\r\n\r\n      child = spawn( runnerPath, argv, {\r\n         timeout: 4000,\r\n         detached: true,\r\n         cwd\r\n       });\r\n\r\n      child.stdout.on( \"data\", ( data ) => {\r\n         fs.writeSync( log, `${data}`, \"utf-8\" );\r\n      });\r\n\r\n      child.stderr.on( \"data\", ( data ) => {\r\n        fs.writeSync( log, `ERROR: ${data}`, \"utf-8\" );\r\n      });\r\n\r\n      child.on( \"error\", ( e ) => {\r\n        fs.writeSync( log, [ \"ERROR:\", e, \"\\r\\n\" ].join( \" \" ), \"utf-8\" );\r\n        reject( e );\r\n      });\r\n\r\n       child.unref();\r\n       setTimeout( resolve, 500 );\r\n   });\r\n}\r\n\r\nexports.launch = launch;\r\nexports.rtrim = rtrim;\r\nexports.copy = copy;\r\nexports.remove = remove;\r\n"]}